services:
  - docker:dind

stages:
  - test
  - e2e
  - test_pypi
  - pypi
  - container_test
  - postrelease
  - notifydependents

variables:
  STAGE_IMAGE: $REPO_URL/stage:latest

test:
  image: $STAGE_IMAGE
  stage: test
  tags:
    - docker
  script:
    - tox -e py36

test-push-to-pypi:
  image: $STAGE_IMAGE
  stage: test_pypi
  tags:
    - docker
  only:
    - feature/test-pypi
  script:
    - python setup.py sdist bdist_wheel
    # using env variables from Gitlab: TWINE_USERNAME, TWINE_PASSWORD, TWINE_REPOSITORY_URL
    - twine upload --repository-url $TWINE_REPOSITORY_URL_TEST -u $TWINE_USERNAME_TEST -p $TWINE_PASSWORD_TEST dist/*

push-to-pypi:
  image: $STAGE_IMAGE
  stage: pypi
  tags:
    - docker
  only:
    - tags
  script:
    - python setup.py sdist bdist_wheel

    # check git tag version vs setup.py version. bail if not equal.
    - >-
      tagver=$(git describe --abbrev=0 --tags)
      setupver=$(grep "version=" setup.py | cut -d"'" -f 2)

      if [ $tagver != $setupver ]; then
        echo "git tag version ($tagver) does not match setup.py version ($setupver)"
        exit 1
      fi

    # using env variables from Gitlab: TWINE_USERNAME, TWINE_PASSWORD, TWINE_REPOSITORY_URL
    - twine upload dist/*

windowsbase_container_test:
  stage: container_test
  tags:
    - win-participants
  only:
    - feature/base-windows-build
    - fix/impersonate-windows-tty
    - tags
  script:
    - docker login -u "$CI_CUSTOM_DOCKER_HUB_USERNAME" -p "$CI_CUSTOM_DOCKER_HUB_PASSWORD"
    - docker build -t polyswarm/polyswarm-client-windows -f docker/windows/Dockerfile .
    - docker run polyswarm/polyswarm-client-windows powershell -NoProfile -Command 'Set-Location C:/polyswarm/polyswarm-client; pip install tox; tox'

windowsbase:
  stage: postrelease
  tags:
    - win-participants
  only:
    - feature/base-windows-build
    - tags
  script:
    - docker login -u "$CI_CUSTOM_DOCKER_HUB_USERNAME" -p "$CI_CUSTOM_DOCKER_HUB_PASSWORD"
    - docker build --pull -t polyswarm/polyswarm-client-windows -t "polyswarm/polyswarm-client-windows:$CI_COMMIT_SHA" -t "$REPO_URL/polyswarm-client-windows:latest" -t "$REPO_URL/polyswarm-client-windows:$CI_COMMIT_SHA" -t "polyswarm/polyswarm-client-windows:$(git describe --tags --abbrev=0)" -f docker/windows/Dockerfile .
    - docker push polyswarm/polyswarm-client-windows:latest
    - docker push "polyswarm/polyswarm-client-windows:$CI_COMMIT_SHA"
    - docker push "polyswarm/polyswarm-client-windows:$(git describe --tags --abbrev=0)"
    - docker logout
    - pip install awscli
    - aws ecr get-login --no-include-email --region us-east-1 | Powershell
    - docker push "$REPO_URL/polyswarm-client-windows:latest"
    - docker push "$REPO_URL/polyswarm-client-windows:$CI_COMMIT_SHA"

linuxbase:
  image: $STAGE_IMAGE
  stage: postrelease
  tags:
    - docker
  only:
    - feature/base-linux-build
    - tags
  script:
    - docker login -u "$CI_CUSTOM_DOCKER_HUB_USERNAME" -p "$CI_CUSTOM_DOCKER_HUB_PASSWORD"
    - docker build -t polyswarm/polyswarm-client -t "polyswarm/polyswarm-client:$CI_COMMIT_SHA" -t "polyswarm/polyswarm-client:$(git describe --tags --abbrev=0)" -t "$REPO_URL/polyswarm-client:latest" -t "$REPO_URL/polyswarm-client:$CI_COMMIT_SHA" -f docker/Dockerfile .
    - docker push polyswarm/polyswarm-client:latest
    - docker push "polyswarm/polyswarm-client:$CI_COMMIT_SHA"
    - docker push "polyswarm/polyswarm-client:$(git describe --tags --abbrev=0)"
    - docker logout
    - pip install awscli

    - eval $(aws ecr get-login --no-include-email --region us-east-1)
    - docker push "$REPO_URL/polyswarm-client:latest"
    - docker push "$REPO_URL/polyswarm-client:$CI_COMMIT_SHA"

kickafterdepends:
  image: $STAGE_IMAGE
  stage: notifydependents
  only:
    - feature/base-windows-build
    - feature/base-linux-build
    - tags
  script:
    - python3 kick_downstream.py
