services:
  - docker:dind

stages:
  - ciimage
  - test
  - e2e
  - notifydependents
  - pypi
  - postrelease

variables:
  STAGE_IMAGE: $CI_CUSTOM_DEV_REGISTRY_URI/ci-images/stage:latest

buildciimage:
  image: $STAGE_IMAGE
  tags:
    - docker
  stage: ciimage
  script:
    - docker login -u "$CI_CUSTOM_DEV_REGISTRY_USERNAME" -p "$CI_CUSTOM_DEV_REGISTRY_PASSWORD" "$CI_CUSTOM_DEV_REGISTRY_URI"
    - docker build -t $STAGE_IMAGE  docker/ci-image/
    - docker push $STAGE_IMAGE
  only:
    - images

test:
  image: $STAGE_IMAGE
  stage: test
  tags:
    - docker
  script:
    - tox -e py36
  except:
    - images


#kick-e2e:
#  image: $STAGE_IMAGE
#  tags:
#      - docker
#  except:
#    - images
#  stage: e2e
#  script:
#    - set -e
#
#    # kick e2e
#    - >-
#      E2E_PIPELINE_ID=`curl
#      --silent
#      --request POST
#      --form "token=$CI_JOB_TOKEN"
#      --form "variables[SOURCE_PROJECT]=$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME"
#      --form "variables[SOURCE_BRANCH]=$CI_COMMIT_REF_NAME"
#      --form "ref=master"
#      "https://gitlab.polyswarm.io/api/v4/projects/${CI_CUSTOM_PROJECT_ID_E2E}/trigger/pipeline" | jq -r ".id"`
#
#    # poll for it to finish
#    - >-
#      while [ -z $PIPELINE_STATUS ] || [ $PIPELINE_STATUS = "pending" ] || [ $PIPELINE_STATUS = "running" ]; do
#        PIPELINE_STATUS=`curl \
#          --silent \
#          --header "PRIVATE-TOKEN: $CI_CUSTOM_CI_PAT" \
#          "https://gitlab.polyswarm.io/api/v4/projects/${CI_CUSTOM_PROJECT_ID_E2E}/pipelines/$E2E_PIPELINE_ID" | jq -r ".status"`
#        echo "waiting for e2e pipeline ...";
#        sleep 5;
#      done
#
#    # check for success
#    - >-
#      if [ $PIPELINE_STATUS != "success" ]; then
#        echo "failure further down the pipeline"
#        exit 1
#      fi
#
#kickafterpacker:
#  image: $STAGE_IMAGE
#  stage: notifydependents
#  tags:
#    - docker
#  only:
#    - feature/windows-builds
#    - master
#  script:
#    - python3 kick_downstream.py

push-to-pypi:
  image: $STAGE_IMAGE
  stage: pypi
  tags:
    - docker
  only:
    - tags
  script:
    - python setup.py sdist bdist_wheel

    # check git tag version vs setup.py version. bail if not equal.
    - >-
      tagver=$(git describe --abbrev=0 --tags)
      setupver=$(grep "version=" setup.py | cut -d"'" -f 2)

      if [ $tagver != $setupver ]; then
        echo "git tag version ($tagver) does not match setup.py version ($setupver)"
        exit 1
      fi

    # using env variables from Gitlab: TWINE_USERNAME, TWINE_PASSWORD, TWINE_REPOSITORY_URL
    - twine upload dist/*

windowsbase:
  stage: postrelease
  tags:
    - win-test
  only:
    - feature/base-windows-build
    - tags
  script:
    - docker login -u "$CI_CUSTOM_DOCKER_HUB_USERNAME" -p "$CI_CUSTOM_DOCKER_HUB_PASSWORD"
    - docker build -t polyswarm/polyswarm-client-windows -f docker/windows/base/Dockerfile docker/windows/base
    - docker push polyswarm/polyswarm-client-windows

linuxbase:
  stage: postrelease
  tags:
    - docker
  only:
    - feature/base-linux-build
    - tags
  script:
    - docker login -u "$CI_CUSTOM_DOCKER_HUB_USERNAME" -p "$CI_CUSTOM_DOCKER_HUB_PASSWORD"
    - docker build -t polyswarm/polyswarm-client -f docker/Dockerfile .
    - docker push polyswarm/polyswarm-client
